package bobo;

public class ExoMaison {
	/** Affiche la largeur, longueur couleur de la maison */
	public static void printMaison(Maison m) {
		System.out.println(m.largeur+":"+m.longueur);
	}
	/** Double les tailles de la maison*/
	public static void doubleMaison(Maison m) {

	}
	/** Remplit le tableau de maison avec des tailles aléatoires */
	public static void createMaisons(Maison[] tab) {

		if (tab == null) {
			return;
		}
		for (int i = 0; i < tab.length; i++) {
			Maison maison = new Maison();
			maison.largeur = new Random().nextInt(100);
			maison.longueur = new Random().nextInt(100);
			tab[i] = maison;
		}

	}

	/** Affiche les maisons avec leur taille. 1 maison par ligne */
	public static void printMaisons(Maison[] tab) {
		if (tab == null) {
			return;
		}
		for (int i = 0; i < tab.length; i++) {
			System.out.println(tab[i] + ":" + tab[i].largeur + "x" + tab[i].longueur);
		}

	}

	/** Retourne la maison la plus grande (Longueur * largeur) */
	public static Maison bigMaison(Maison[] tab) {
		if (tab == null) {
			return null;
		}
		Maison maisonMax = null;
		for (int i = 0; i < tab.length; i++) {
			if (maisonMax == null) {
				maisonMax = tab[i];
			}
			// Action
			else if (tab[i].largeur * tab[i].longueur > maisonMax.largeur * maisonMax.longueur) {
				maisonMax = tab[i];
			}
		}
		return maisonMax;
	}

	public static void printMaison(Maison m) {
		if (m == null) {
			System.out.println("La maison est nulle");
		} else {
			System.out.println("La maison : " + m.largeur + "x" + m.longueur);
		}
	}

	public static void doubleMaison(Maison m) {
		m.largeur *= 2;
		m.longueur *= 2;

	}

	public static Maison bigMaison(Maison m1, Maison m2) {
		if (m1 == null && m2 == null) {
			return null;
		} else if (m1 == null) {
			return m2;
		} else if (m2 == null) {
			return m1;
		} else if (m1.largeur * m1.longueur > m2.largeur * m2.longueur) {
			return m1;
		} else if (m1.largeur * m1.longueur < m2.largeur * m2.longueur) {
			return m2;
		}

		return null;
	}



